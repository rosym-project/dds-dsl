package DDS.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_DDS_Deadline;
  private ConceptPresentation props_DDS_Depth;
  private ConceptPresentation props_DDS_Durability;
  private ConceptPresentation props_DDS_History;
  private ConceptPresentation props_DDS_LeaseDuration;
  private ConceptPresentation props_DDS_Lifespan;
  private ConceptPresentation props_DDS_Liveliness;
  private ConceptPresentation props_DDS_Reliability;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.DDS_Deadline:
        if (props_DDS_Deadline == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Deadline (DDS)");
          props_DDS_Deadline = cpb.create();
        }
        return props_DDS_Deadline;
      case LanguageConceptSwitch.DDS_Depth:
        if (props_DDS_Depth == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Depth (DDS)");
          props_DDS_Depth = cpb.create();
        }
        return props_DDS_Depth;
      case LanguageConceptSwitch.DDS_Durability:
        if (props_DDS_Durability == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Durability (DDS)");
          props_DDS_Durability = cpb.create();
        }
        return props_DDS_Durability;
      case LanguageConceptSwitch.DDS_History:
        if (props_DDS_History == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("History (DDS)");
          props_DDS_History = cpb.create();
        }
        return props_DDS_History;
      case LanguageConceptSwitch.DDS_LeaseDuration:
        if (props_DDS_LeaseDuration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Lease Duration (DDS)");
          props_DDS_LeaseDuration = cpb.create();
        }
        return props_DDS_LeaseDuration;
      case LanguageConceptSwitch.DDS_Lifespan:
        if (props_DDS_Lifespan == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Lifespan (DDS)");
          props_DDS_Lifespan = cpb.create();
        }
        return props_DDS_Lifespan;
      case LanguageConceptSwitch.DDS_Liveliness:
        if (props_DDS_Liveliness == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Livelines (DDS)");
          props_DDS_Liveliness = cpb.create();
        }
        return props_DDS_Liveliness;
      case LanguageConceptSwitch.DDS_Reliability:
        if (props_DDS_Reliability == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("Reliability (DDS)");
          props_DDS_Reliability = cpb.create();
        }
        return props_DDS_Reliability;
    }
    return null;
  }
}
